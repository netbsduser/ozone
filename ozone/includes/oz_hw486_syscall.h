//+++2003-03-01
//    Copyright (C) 2001,2002,2003  Mike Rieker, Beverly, MA USA
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; version 2 of the License.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//---2003-03-01

// Generated by oz_hw486_syscall_h_gen.c
// Called by oz_hw_486.h to define the OZ_HW_SYSCALL_DCL_* and OZ_HW_SYSCALL_DEF_* macros

#ifndef _OZ_HW486_SYSCALL_H
#define _OZ_HW486_SYSCALL_H

#define OZ_HW_SYSCALL_DCL_0(name) uLong oz_sys_##name (void); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__);
#define OZ_HW_SYSCALL_DCL_1(name,t1,v1) uLong oz_sys_##name (t1 v1); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1);
#define OZ_HW_SYSCALL_DCL_2(name,t1,v1,t2,v2) uLong oz_sys_##name (t1 v1,t2 v2); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2);
#define OZ_HW_SYSCALL_DCL_3(name,t1,v1,t2,v2,t3,v3) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3);
#define OZ_HW_SYSCALL_DCL_4(name,t1,v1,t2,v2,t3,v3,t4,v4) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4);
#define OZ_HW_SYSCALL_DCL_5(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5);
#define OZ_HW_SYSCALL_DCL_6(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6);
#define OZ_HW_SYSCALL_DCL_7(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7);
#define OZ_HW_SYSCALL_DCL_8(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8);
#define OZ_HW_SYSCALL_DCL_9(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9);
#define OZ_HW_SYSCALL_DCL_10(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10);
#define OZ_HW_SYSCALL_DCL_11(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11);
#define OZ_HW_SYSCALL_DCL_12(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12);
#define OZ_HW_SYSCALL_DCL_13(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12,t13,v13) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13);
#define OZ_HW_SYSCALL_DCL_14(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12,t13,v13,t14,v14) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14);
#define OZ_HW_SYSCALL_DCL_15(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12,t13,v13,t14,v14,t15,v15) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14,t15 v15); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14,t15 v15);
#define OZ_HW_SYSCALL_DCL_16(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12,t13,v13,t14,v14,t15,v15,t16,v16) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14,t15 v15,t16 v16); uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14,t15 v15,t16 v16);

#define OZ_HW486_SYSCALL_SIZEOF(tn) (((sizeof (tn)) + 3) & -4)

#define OZ_HW_SYSCALL_DEF_0(name) uLong oz_sys_##name (void) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (0), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__)
#define OZ_HW_SYSCALL_DEF_1(name,t1,v1) uLong oz_sys_##name (t1 v1) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1)
#define OZ_HW_SYSCALL_DEF_2(name,t1,v1,t2,v2) uLong oz_sys_##name (t1 v1,t2 v2) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2)
#define OZ_HW_SYSCALL_DEF_3(name,t1,v1,t2,v2,t3,v3) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3)
#define OZ_HW_SYSCALL_DEF_4(name,t1,v1,t2,v2,t3,v3,t4,v4) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4)
#define OZ_HW_SYSCALL_DEF_5(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5)
#define OZ_HW_SYSCALL_DEF_6(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6)
#define OZ_HW_SYSCALL_DEF_7(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7)
#define OZ_HW_SYSCALL_DEF_8(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8)
#define OZ_HW_SYSCALL_DEF_9(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)+OZ_HW486_SYSCALL_SIZEOF(t9)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9)
#define OZ_HW_SYSCALL_DEF_10(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)+OZ_HW486_SYSCALL_SIZEOF(t9)+OZ_HW486_SYSCALL_SIZEOF(t10)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10)
#define OZ_HW_SYSCALL_DEF_11(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)+OZ_HW486_SYSCALL_SIZEOF(t9)+OZ_HW486_SYSCALL_SIZEOF(t10)+OZ_HW486_SYSCALL_SIZEOF(t11)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11)
#define OZ_HW_SYSCALL_DEF_12(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)+OZ_HW486_SYSCALL_SIZEOF(t9)+OZ_HW486_SYSCALL_SIZEOF(t10)+OZ_HW486_SYSCALL_SIZEOF(t11)+OZ_HW486_SYSCALL_SIZEOF(t12)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12)
#define OZ_HW_SYSCALL_DEF_13(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12,t13,v13) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)+OZ_HW486_SYSCALL_SIZEOF(t9)+OZ_HW486_SYSCALL_SIZEOF(t10)+OZ_HW486_SYSCALL_SIZEOF(t11)+OZ_HW486_SYSCALL_SIZEOF(t12)+OZ_HW486_SYSCALL_SIZEOF(t13)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13)
#define OZ_HW_SYSCALL_DEF_14(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12,t13,v13,t14,v14) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)+OZ_HW486_SYSCALL_SIZEOF(t9)+OZ_HW486_SYSCALL_SIZEOF(t10)+OZ_HW486_SYSCALL_SIZEOF(t11)+OZ_HW486_SYSCALL_SIZEOF(t12)+OZ_HW486_SYSCALL_SIZEOF(t13)+OZ_HW486_SYSCALL_SIZEOF(t14)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14)
#define OZ_HW_SYSCALL_DEF_15(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12,t13,v13,t14,v14,t15,v15) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14,t15 v15) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)+OZ_HW486_SYSCALL_SIZEOF(t9)+OZ_HW486_SYSCALL_SIZEOF(t10)+OZ_HW486_SYSCALL_SIZEOF(t11)+OZ_HW486_SYSCALL_SIZEOF(t12)+OZ_HW486_SYSCALL_SIZEOF(t13)+OZ_HW486_SYSCALL_SIZEOF(t14)+OZ_HW486_SYSCALL_SIZEOF(t15)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14,t15 v15)
#define OZ_HW_SYSCALL_DEF_16(name,t1,v1,t2,v2,t3,v3,t4,v4,t5,v5,t6,v6,t7,v7,t8,v8,t9,v9,t10,v10,t11,v11,t12,v12,t13,v13,t14,v14,t15,v15,t16,v16) uLong oz_sys_##name (t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14,t15 v15,t16 v16) {asm volatile ("movw  %%cs,%%ax\n	testb $2,%%al\n	jne   oz_hw486_syscall\n	movl  %%ebp,%%esp\n	pushl $0\n	call  oz_syscall_" #name "\n	addl  $4,%%esp\n	popl  %%ebp\n	ret" : : "c" (OZ_HW486_SYSCALL_SIZEOF(t1)+OZ_HW486_SYSCALL_SIZEOF(t2)+OZ_HW486_SYSCALL_SIZEOF(t3)+OZ_HW486_SYSCALL_SIZEOF(t4)+OZ_HW486_SYSCALL_SIZEOF(t5)+OZ_HW486_SYSCALL_SIZEOF(t6)+OZ_HW486_SYSCALL_SIZEOF(t7)+OZ_HW486_SYSCALL_SIZEOF(t8)+OZ_HW486_SYSCALL_SIZEOF(t9)+OZ_HW486_SYSCALL_SIZEOF(t10)+OZ_HW486_SYSCALL_SIZEOF(t11)+OZ_HW486_SYSCALL_SIZEOF(t12)+OZ_HW486_SYSCALL_SIZEOF(t13)+OZ_HW486_SYSCALL_SIZEOF(t14)+OZ_HW486_SYSCALL_SIZEOF(t15)+OZ_HW486_SYSCALL_SIZEOF(t16)), "d" (OZ_SYSCALL_##name)); return (0); } uLong oz_syscall_##name (OZ_Procmode cprocmode, void *__dummy_ebp__, void *__dummy_eip__,t1 v1,t2 v2,t3 v3,t4 v4,t5 v5,t6 v6,t7 v7,t8 v8,t9 v9,t10 v10,t11 v11,t12 v12,t13 v13,t14 v14,t15 v15,t16 v16)

#endif
